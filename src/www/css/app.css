*::before,
*,
*::after {
  box-sizing: border-box;
  font-family: "Open Sans", sans-serif;
}

:root {
  --black: hsl(0, 0%, 20%);
  --white: hsl(0, 0%, 87%);
  /* Audio player properties */
  --playerWidth: 20rem;
  --playerCoverArtSize: 5rem;
}

body {
  margin: 0;
  background-color: var(--black);
  color: var(--white);
  overflow: hidden;
}

.alert p {
  text-align: center;
  font-size: 1.25rem;
}

.alert img {
  display: block;
  max-height: 200px;
  margin: auto;
}

/*
 * Karaoke time
 */

.light {
  position: absolute;
  z-index: -1;
  height: 140vh;
  width: 40%;
  margin-left: 30%;
  margin-top: -1rem;
  clip-path: polygon(45% 0, 55% 0, 100% 100%, 0% 100%);

  transform-origin: top center;
}

.light-left {
  animation: rotateLights 1.75s infinite ease-in-out alternate,
    lightsColor 0.75s infinite linear alternate;
}

.light-right {
  animation: rotateLights 1.75s infinite ease-in-out alternate-reverse,
    lightsColor 0.75s infinite linear alternate-reverse;
}

@keyframes rotateLights {
  from {
    transform: rotateZ(-30deg);
  }
  to {
    transform: rotateZ(30deg);
  }
}

@keyframes lightsColor {
  from {
    background-color: var(--light-color-left);
  }

  to {
    background-color: var(--light-color-right);
  }
}

/*
 * Russian roulette
 */

.shoot {
  transform-origin: center;
  animation: shoot 0.3s ease-in-out -0.05s alternate;
}

@keyframes shoot {
  from {
    transform: rotateZ(0deg);
  }

  50% {
    transform: rotateZ(4deg);
  }

  to {
    transform: rotateZ(0deg);
  }
}

/*
 * Card
 */
.card {
  position: absolute;
  left: calc(50% - 25rem / 2);
  top: 0.5rem;
  width: 25rem;
  height: 6.25rem;
  display: flex;
  align-items: center;
  border: 1px solid var(--card-border-color);
  border-radius: 0.5rem;
  background-color: var(--card-background-color);
}

.card.open {
  animation: cardAnimation 0.75s cubic-bezier(0.18, 0.89, 0.32, 1.28) forwards;
}

.card.close {
  animation: cardAnimation 0.75s cubic-bezier(0.18, 0.89, 0.32, 1.28) reverse;
}

@keyframes cardAnimation {
  from {
    top: -6.25rem;
  }
  to {
    top: 0.5rem;
  }
}

.card-light {
  color: var(--black);
}

.card .card-image {
  height: 3.5rem;
  margin: 0.5rem;
}

.card .card-body {
  width: 100%;
}

.card .card-body .title,
.card .card-body .message {
  margin: 0;
}

.card .card-body .title {
  font-size: 1.25rem;
  text-align: center;
}

.card .card-body .message {
  font-size: 1rem;
  margin: 0 0.5rem;
}

/*
 * Audio player overlay
 */

#playing {
  position: absolute;
  bottom: 0.5rem;
  left: 0.5rem;
  width: var(--playerWidth);
  padding: 0.5rem;
  background-color: rgba(0, 0, 0, 0.85);
  border-radius: 0.5rem;
  display: flex;
}

#playing {
  display: flex;
  align-items: center;
}

#playing > div {
  overflow: hidden;
}

#playing .previous {
  animation: 1s translateToLeft forwards;
}

#playing .next {
  animation: 1s translateFromRight forwards;
}

@keyframes translateToLeft {
  from {
    transform: translate3d(0, 0, 0);
  }

  80%,
  100% {
  }
  to {
    transform: translate3d(-100%, 0, 0);
  }
}

@keyframes translateFromRight {
  from {
    transform: translate3d(0, 0, 0);
  }

  0%,
  10% {
  }
  to {
    transform: translate3d(-100%, 0, 0);
  }
}

#playing .coverArtContainer {
  display: flex;
  width: var(--playerCoverArtSize);
  height: var(--playerCoverArtSize);
  margin-right: calc(var(--playerCoverArtSize) / 5);
}

#playing .coverArt {
  flex-shrink: 0;
  width: 100%;
  height: 100%;
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
  background-image: var(--coverArt);
}

#playing h1,
#playing h2 {
  width: calc(var(--playerWidth) - var(--playerCoverArtSize) * 1.2 - 1em * 1.5);
  margin: 0;
  font-size: 1rem;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}
