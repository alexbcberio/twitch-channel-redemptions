enum SubscriptionTypeV1 {
  ChannelFollow = "channel.follow",
  ChannelSubscribe = "channel.subscribe",
  ChannelSubscriptionEnd = "channel.subscription.end",
  ChannelSubscriptionGift = "channel.subscription.gift",
  ChannelSubscriptionMessage = "channel.subscription.message",
  ChannelCheer = "channel.cheer",
  ChannelRaid = "channel.raid",
  ChannelBan = "channel.ban",
  ChannelUnban = "channel.unban",
  ChannelModeratorAdd = "channel.moderator.add",
  ChannelModeratorRemove = "channel.moderator.remove",
  ChannelChannelPointsCustomRewardAdd = "channel.channel_points_custom_reward.add",
  ChannelChannelPointsCustomRewardUpdate = "channel.channel_points_custom_reward.update",
  ChannelChannelPointsCustomRewardRemove = "channel.channel_points_custom_reward.remove",
  ChannelChannelPointsCustomRewardRedemptionAdd = "channel.channel_points_custom_reward_redemption.add",
  ChannelChannelPointsCustomRewardRedemptionUpdate = "channel.channel_points_custom_reward_redemption.update",
  ChannelPollBegin = "channel.poll.begin",
  ChannelPollProgress = "channel.poll.progress",
  ChannelPollEnd = "channel.poll.end",
  ChannelPredictionBegin = "channel.prediction.begin",
  ChannelPredictionProgress = "channel.prediction.progress",
  ChannelPredictionLock = "channel.prediction.lock",
  ChannelPredictionEnd = "channel.prediction.end",
  ChannelGoalBegin = "channel.goal.begin",
  ChannelGoalProgress = "channel.goal.progress",
  ChannelGoalEnd = "channel.goal.end",
  ChannelHypeTrainBegin = "channel.hype_train.begin",
  ChannelHypeTrainProgress = "channel.hype_train.progress",
  ChannelHypeTrainEnd = "channel.hype_train.end",
  StreamOnline = "stream.online",
  StreamOffline = "stream.offline",
}

enum ApiScope {
  AnalyticsReadExtensions = "analytics:read:extensions",
  AnalyticsReadGames = "analytics:read:games",
  BitsRead = "bits:read",
  ChannelEditCommercial = "channel:edit:commercial",
  ChannelManageBroadcast = "channel:manage:broadcast",
  ChannelManageExtensions = "channel:manage:extensions",
  ChannelManagePolls = "channel:manage:polls",
  ChannelManagePredictions = "channel:manage:predictions",
  ChannelManageRedemptions = "channel:manage:redemptions",
  ChannelManageSchedule = "channel:manage:schedule",
  ChannelManageVideos = "channel:manage:videos",
  ChannelReadEditors = "channel:read:editors",
  ChannelReadGoals = "channel:read:goals",
  ChannelReadHypeTrain = "channel:read:hype_train",
  ChannelReadPolls = "channel:read:polls",
  ChannelReadPredictions = "channel:read:predictions",
  ChannelReadRedemptions = "channel:read:redemptions",
  ChannelReadStreamKey = "channel:read:stream_key",
  ChannelReadSubscriptions = "channel:read:subscriptions",
  ClipsEdit = "clips:edit",
  ModerationRead = "moderation:read",
  ModeratorManageBanned_users = "moderator:manage:banned_users",
  ModeratorReadBlocked_terms = "moderator:read:blocked_terms",
  ModeratorReadFollowers = "moderator:read:followers",
  ModeratorManageBlocked_terms = "moderator:manage:blocked_terms",
  ModeratorManageAutomod = "moderator:manage:automod",
  ModeratorReadAutomodSettings = "moderator:read:automod_settings",
  ModeratorManageAutomodSettings = "moderator:manage:automod_settings",
  ModeratorReadChat_settings = "moderator:read:chat_settings",
  ModeratorManageChat_settings = "moderator:manage:chat_settings",
  UserEdit = "user:edit",
  UserEditFollows = "user:edit:follows",
  UserManageBlocked_users = "user:manage:blocked_users",
  UserReadBlocked_users = "user:read:blocked_users",
  UserReadBroadcast = "user:read:broadcast",
  UserReadEmail = "user:read:email",
  UserReadFollows = "user:read:follows",
  UserReadSubscription = "user:read:subscriptions",
}

enum ChatPubSubScope {
  ChannelModerate = "channel:moderate",
  ChatEdit = "chat:edit",
  ChatRead = "chat:read",
  WhispersRead = "whispers:read",
  WhispersEdit = "whispers:edit",
}

type AuthenticationScope = ApiScope | ChatPubSubScope;

export { SubscriptionTypeV1, ApiScope, ChatPubSubScope, AuthenticationScope };
